{"version":3,"sources":["./src/app/components/error-msg/error-msg.component.ts","./src/app/components/error-msg/error-msg.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/images-block/images-block.component.ts","./src/app/components/images-block/images-block.component.html","./src/environments/environment.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/test-service.service.ts","./src/app/components/user-page/user-page.component.ts","./src/app/components/user-page/user-page.component.html","./src/app/components/alert/alert.component.ts","./src/app/components/alert/alert.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/components/register-form/register-form.component.ts","./src/app/components/register-form/register-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/http-interceptors/interceptor.ts","./src/app/components/upload-image/upload-image.component.ts","./src/app/components/upload-image/upload-image.component.html","./src/app/app.module.ts","./src/app/helper.service.ts","./src/app/server-api.service.ts","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/app/components/users-list/users-list.component.ts","./src/app/components/users-list/users-list.component.html","./src/consts/connect.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-error-msg',\n  templateUrl: './error-msg.component.html',\n  styleUrls: ['./error-msg.component.css']\n})\n\nexport class ErrorMsgComponent implements OnInit {\n\n  @Input()\n    message: string;\n\n  @Input()\n    status: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"alert mt-3\" *ngIf=\"message\" [ngClass]=\"{ 'alert-success': status , 'alert-danger': !status }\">{{message}}</div>\n","import { Component, OnInit } from '@angular/core';\nimport {HelperService} from \"../../helper.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  userId = localStorage.getItem('userId');\n  constructor(private helperService: HelperService) {}\n\n  ngOnInit(): void {\n    console.log(localStorage.getItem('userId'));\n    this.helperService.loginStatus$.subscribe(r => this.userId = localStorage.getItem('userId'));\n  }\n\n\n  logout(): void {\n    localStorage.removeItem('userId');\n    localStorage.removeItem('token');\n    location.reload();\n  }\n}\n","<!--<div class=\"header\">-->\n<!--  <div class=\"container\">-->\n<!--    <div class=\"header-content\">-->\n<!--  <nav>-->\n<!--    <ul class=\"menu\">-->\n<!--      <li class=\"menu-link\" [routerLink]=\"['/']\"><span>Main Page</span></li>-->\n<!--      <li class=\"menu-link\" [routerLink]=\"['/profile/', userId]\"><span>My profile</span></li>-->\n<!--      <li class=\"menu-link\" [routerLink]=\"['/upload']\">Upload Image</li>-->\n<!--    </ul>-->\n<!--  </nav>-->\n<!--  <div class=\"login-block menu\">-->\n<!--  <span *ngIf=\"!userId\" routerLink=\"/login\" class=\"menu-link\">Login</span>-->\n<!--  <span *ngIf=\"!userId\" routerLink=\"/register\" class=\"menu-link\">Register</span>-->\n<!--    <span *ngIf=\"userId\" (click)=\"logout()\" class=\"menu-link\">Logout</span>-->\n<!--  </div>-->\n<!--  </div>-->\n<!--  </div>-->\n<!--</div>-->\n<div class=\"header\">\n  <a href=\"#default\" class=\"logo\">\n    GifTumbler\n  </a>\n  <div class=\"left-menu\">\n    <a  [routerLink]=\"['/']\"><span>Main Page</span></a>\n    <a  [routerLink]=\"['/profile/', userId]\"><span>My profile</span></a>\n    <a  [routerLink]=\"['/upload']\">Upload Image</a>\n  </div>\n  <div class=\"header-right\">\n\n    <a *ngIf=\"!userId\" routerLink=\"/login\" class=\"menu-link\">Login</a>\n    <a *ngIf=\"!userId\" routerLink=\"/register\" class=\"menu-link\">Register</a>\n    <a *ngIf=\"userId\" (click)=\"logout()\" class=\"menu-link\">Logout</a>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ServerApiService} from '../../server-api.service';\nimport {TestServiceService} from '../../test-service.service';\nimport {HelperService} from '../../helper.service';\n\n@Component({\n  selector: 'app-images-block',\n  templateUrl: './images-block.component.html',\n  styleUrls: ['./images-block.component.css']\n})\nexport class ImagesBlockComponent {\n  @Input()\n  allImages;\n\n  @Input()\n  favourite = false;\n\n  @Input()\n  removeFromFavourite = null;\n\n  constructor(private service: ServerApiService, private testService: TestServiceService, private helperService: HelperService) { }\n\n  buttonClickHeader(imgId, isFavourite = false): void {\n    if (this.removeFromFavourite) {\n      this.removeFromFavourite(imgId);\n    } else {\n      console.log(1223);\n      console.log(isFavourite);\n      isFavourite ? this.removeImgFromFavorites(imgId) : this.addImgToFavourites(imgId);\n    }\n  }\n\n  addImgToFavourites(imgId): void {\n      this.service.addImgToFavorites(imgId).subscribe(r => {\n        this.changeIsFavouriteStatus(imgId);\n      });\n  }\n\n  removeImgFromFavorites(imgId): void {\n      this.service.removeImgFromFavorites(imgId).subscribe(r => {\n        this.changeIsFavouriteStatus(imgId);\n      });\n  }\n\n  changeIsFavouriteStatus(imgId): void {\n    const image = this.allImages.filter(n => n.id === imgId);\n    image[0].favourite = !image[0].favourite;\n  }\n}\n","<div class=\"images-block\" >\n  <div *ngFor=\"let image of allImages\" class=\"image\">\n    <img *ngIf=\"image.path\" [src]=\"'http://localhost:4000/'+image.path\"  alt=\"12\">\n    <button (click)=\"buttonClickHeader(image.id, image.favourite)\" class=\"btn btn-primary\">\n      <span *ngIf=\"image.favourite  || favourite\">Remove from Favourites</span>\n      <span *ngIf=\"!image.favourite && !favourite\">Add to Favourites</span>\n    </button>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {ServerApiService} from '../../server-api.service';\nimport {HelperService} from '../../helper.service';\nimport {mergeMap} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  allImages;\n  constructor(private service: ServerApiService, private helperService: HelperService) { }\n\n  ngOnInit(): void {\n    this.service.getFavouriteUserImages().subscribe(r => {\n      this.allImages = r;\n    });\n    this.helperService.favouriteImages$.pipe(\n      mergeMap(r => this.service.getFavouriteUserImages())\n    ).subscribe(res => {\n      this.allImages = res;\n    });\n  }\n\n  removeFromFavorites(imageId): void  {\n    this.service.removeImgFromFavorites(imageId).subscribe(r => {\n      this.helperService.updateFavouriteImages();\n    });\n\n\n  }\n\n}\n","<div class=\"main-div\">\n  <h1>My favourites gif</h1>\n  <app-images-block [allImages]=\"allImages\" [favourite]=\"true\" [removeFromFavourite]=\"removeFromFavorites\"></app-images-block>\n</div>\n","import { Component } from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {ServerApiService} from '../../server-api.service';\nimport {HelperService} from '../../helper.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent {\n  loginForm;\n  message: string;\n  status = false;\n\n  constructor(private formBuilder: FormBuilder, private service: ServerApiService,\n              private route: Router, private helperService: HelperService) {\n    this.loginForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  loginUser(data): void {\n    if (this.loginForm.dirty && data.name && data.password) {\n        this.service.loginUser(data).subscribe(res => {\n          localStorage.setItem('token', `bearer ${res.token}`);\n          localStorage.setItem('userId', res.id);\n          this.status = true;\n          this.message = 'Successful login!';\n          this.helperService.updateLoginStatus();\n          this.route.navigate(['']);\n        },\n          error => {\n          this.status = false;\n          this.message = error.reason;\n        });\n        this.loginForm.reset();\n    }\n  }\n\n  get name(): any {\n    return this.loginForm.get('name');\n  }\n\n  get password(): any {\n    return this.loginForm.get('password');\n  }\n}\n","<form (ngSubmit)=\"loginUser(loginForm.value)\" [formGroup]=\"loginForm\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n    <input id=\"name\" type=\"text\" class=\"form-control\" name=\"name\" formControlName=\"name\" placeholder=\"Enter name\" required>\n  </div>\n  <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\n       class=\"alert alert-danger\">\n    <div *ngIf=\"name.errors.required\">\n      Name is required.\n    </div>\n    <div *ngIf=\"name.errors.minlength\">\n      Name must be at least 5 characters long.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" formControlName=\"password\" placeholder=\"password\" required>\n  </div>\n  <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n       class=\"alert alert-danger\">\n    <div *ngIf=\"password.errors.required\">\n      Password is required.\n    </div>\n    <div *ngIf=\"password.errors.minlength\">\n      Password must be at least 5 characters long.\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"name.invalid || password.invalid\" class=\"btn btn-primary\">Login</button>\n</form>\n<div class=\"alert mt-3\" *ngIf=\"message\" [ngClass]=\"{ 'alert-success': status , 'alert-danger': !status }\">{{message}}</div>\n","import { Injectable } from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestServiceService {\n  subject$ = new Subject();\n\n  constructor() { }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ServerApiService} from '../../server-api.service';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private service: ServerApiService) { }\n\n  ngOnInit(): void {\n    this.service.getUser(this.route.snapshot.params.id).subscribe(res => console.log(res));\n  }\n\n}\n","<p>user-page works!</p>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  @Input()\n  message: string;\n\n  @Input()\n  status: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"alert mt-3\" [ngClass]=\"{ 'alert-success': status , 'alert-danger': !status }\">{{message}}</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {ServerApiService} from '../../server-api.service';\nimport {HelperService} from \"../../helper.service\";\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  searchForm;\n\n  @Output()\n  tags = new EventEmitter<string>();\n\n  constructor(private formBuilder: FormBuilder, private service: ServerApiService, private helperService: HelperService) {\n    this.searchForm = this.formBuilder.group({\n      tags: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  searchByTags(data): void {\n    console.log(31);\n    this.tags.emit(data.tags);\n    // this.helperService.filteredByTagsImages$.next();\n  }\n\n}\n","<form [formGroup]=\"searchForm\" (ngSubmit)=\"searchByTags(searchForm.value)\" enctype=\"multipart/form-data\" class=\"search\">\n  <div class=\"form-group\">\n    <label  for=\"tags\">Поиск по тегам(вводите теги через #)</label>\n    <br>\n    <input id=\"tags\" type=\"text\" formControlName=\"tags\">\n    <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {ServerApiService} from '../../server-api.service';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.css']\n})\nexport class RegisterFormComponent {\n  registerForm;\n  message: string;\n  status = false;\n\n  constructor(private formBuilder: FormBuilder, private service: ServerApiService, private route: Router) {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n      password: ['', [Validators.required, Validators.minLength(5)]],\n      checkbox: ['', [Validators.required]]\n    });\n  }\n\n  registerUser(data): void {\n    if (this.registerForm.dirty && data.name && data.password && data.checkbox) {\n      this.service.registerUser(data).subscribe(res => {\n        if (res) {\n          this.route.navigate(['login']);\n        }\n      },\n        error => {\n            this.status = false;\n            this.message = error.error;\n    });\n      this.registerForm.reset();\n    }\n  }\n\n  get name(): any {\n    return this.registerForm.get('name');\n  }\n\n  get password(): any {\n    return this.registerForm.get('password');\n  }\n\n  get checkbox(): any {\n    return this.registerForm.get('checkbox');\n  }\n}\n","<form (ngSubmit)=\"registerUser(registerForm.value)\" [formGroup]=\"registerForm\">\n  <div class=\"form-group\">\n    <label for=\"name\">Name</label>\n      <input id=\"name\" type=\"text\" class=\"form-control\" name=\"name\" formControlName=\"name\" placeholder=\"Enter name\" required minlength=\"5\">\n  </div>\n  <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\n      class=\"alert alert-danger\">\n    <div *ngIf=\"name.errors.required\">\n      Name is required.\n    </div>\n    <div *ngIf=\"name.errors.minlength\">\n      Name must be at least 5 characters long.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" formControlName=\"password\" placeholder=\"password\" required minlength=\"5\">\n  </div>\n  <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n       class=\"alert alert-danger\">\n    <div *ngIf=\"password.errors.required\">\n      Password is required.\n    </div>\n    <div *ngIf=\"password.errors.minlength\">\n      Password must be at least 5 characters long.\n    </div>\n  </div>\n  <div class=\"form-group form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" formControlName=\"checkbox\" required>\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n  </div>\n  <div *ngIf=\"checkbox.invalid && (checkbox.dirty || checkbox.touched)\"\n       class=\"alert alert-danger\">\n    <div *ngIf=\"checkbox.errors.required\">\n      You have disagreed with the rules\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"name.invalid || password.invalid || checkbox.invalid\">Register</button>\n</form>\n\n<div class=\"alert mt-3\" *ngIf=\"message\" [ngClass]=\"{ 'alert-danger': !status }\">{{message}}</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client-side-gif';\n}\n","<div class=\"content\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\n\n@Injectable()\nexport class Interceptor implements HttpInterceptor {\n\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    let authReq = req.clone();\n    console.log(req.url);\n\n    if (localStorage.getItem('token') && localStorage.getItem('userId') && req.url.includes('localhost:4000')) {\n      authReq = req.clone({\n        headers: req.headers.set('Authorization', localStorage.getItem('token'))\n          .set('x-userid', localStorage.getItem('userId'))\n      });\n    }\n\n\n    return next.handle(authReq).pipe(\n      map((event: HttpEvent<any>) => {\n        return event;\n      }),\n      catchError((error: HttpErrorResponse) => {\n        let data: { reason: undefined; status: number };\n        data = {\n          reason: error && error.error ? error.error : '',\n          status: error.status\n        };\n        console.log(data.reason);\n        return throwError(data);\n      })\n\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {ServerApiService} from '../../server-api.service';\nimport {Router} from '@angular/router';\nimport {TestServiceService} from '../../test-service.service';\n\n@Component({\n  selector: 'app-upload-image',\n  templateUrl: './upload-image.component.html',\n  styleUrls: ['./upload-image.component.css']\n})\nexport class UploadImageComponent  {\n  uploadForm;\n  selectedImage: File;\n  imageLink: string;\n  message: string;\n  status = false;\n\n  constructor(private formBuilder: FormBuilder, private apiService: ServerApiService,  private route: Router, private testService: TestServiceService) {\n    this.uploadForm = this.formBuilder.group({\n      image: [''],\n      image_url: [''],\n      tags: ['']\n    });\n  }\n\n  onFileChanged(event): void {\n    this.selectedImage = event.target.files[0];\n  }\n\n  blobToFile(theBlob: Blob, fileName: string): File {\n    const b: any = theBlob;\n    b.lastModifiedDate = new Date();\n    b.name = fileName;\n    return theBlob as File;\n  }\n\n\n  downloadImage(event): void {\n    this.imageLink = event.target.value.trim();\n  }\n\n  uploadImage(data): void {\n    if (this.selectedImage) {\n      this.apiService.uploadImage(this.selectedImage, data).subscribe(r => {\n        this.getResponse(r);\n      }, error => {\n        this.getErrorResponse(error);\n      });\n    } else if (this.imageLink) {\n      this.apiService.uploadImgFromLink(data).subscribe(r => {\n        this.getResponse(r);\n      }, error => {\n        this.getErrorResponse(error);\n      });\n    }\n    this.uploadForm.reset();\n    this.imageLink = '';\n    this.selectedImage = null;\n  }\n\n  private getResponse(response): void {\n    this.status = true;\n    this.message = response.message;\n    this.testService.subject$.next(true);\n  }\n\n  private getErrorResponse(error): void {\n    this.status = false;\n    this.message = error.reason.message;\n  }\n}\n\n\n","<p>Загрузите фотографию по ссылке или с компьютера</p>\n<form [formGroup]=\"uploadForm\" (ngSubmit)=\"uploadImage(uploadForm.value)\" enctype=\"multipart/form-data\">\n  <div class=\"form-group\">\n    <label for=\"image\">С компьютера</label>\n    <input\n      style=\"display: none\"\n      type=\"file\"\n      class=\"form-control\"\n      id=\"image\"\n      formControlName=\"image\"\n      #fileInput\n      (change)=\"onFileChanged($event)\"\n\n    >\n    <button (click)=\"fileInput.click()\" type=\"button\">Select File</button>\n\n  </div>\n  <div class=\"form-group\">\n    <label  for=\"img-link\">По ссылке</label>\n\n    <input id=\"img-link\" type=\"text\" formControlName=\"image_url\" (change)=\"downloadImage($event)\">\n  </div>\n  <div class=\"form-group\">\n    <label  for=\"tags\">Добавить теги для картинки через #</label>\n\n    <input id=\"tags\" type=\"text\" formControlName=\"tags\">\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary\">Upload</button>\n\n</form>\n<app-alert *ngIf=\"message\"  [status]=\"status\" [message]=\"message\"></app-alert>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { UserPageComponent } from './components/user-page/user-page.component';\nimport { RegisterFormComponent } from './components/register-form/register-form.component';\nimport {Interceptor} from './http-interceptors/interceptor';\nimport { MainPageComponent } from './components/main-page/main-page.component';\nimport { ErrorMsgComponent } from './components/error-msg/error-msg.component';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { UploadImageComponent } from './components/upload-image/upload-image.component';\nimport { ImagesBlockComponent } from './components/images-block/images-block.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { SearchComponent } from './components/search/search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n    UsersListComponent,\n    UserPageComponent,\n    RegisterFormComponent,\n    MainPageComponent,\n    ErrorMsgComponent,\n    AlertComponent,\n    UploadImageComponent,\n    ImagesBlockComponent,\n    HeaderComponent,\n    ProfileComponent,\n    SearchComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule\n    ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: Interceptor, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  allImages$ = new Subject();\n  favouriteImages$ = new Subject();\n  filteredByTagsImages$ = new Subject();\n  loginStatus$ = new Subject();\n\n  constructor() { }\n\n  updateAllImages(): void {\n    this.allImages$.next(true);\n  }\n\n  updateFavouriteImages(): void {\n    this.favouriteImages$.next();\n  }\n\n  updateLoginStatus(): void {\n    this.loginStatus$.next();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {BASE_URL} from '../consts/connect';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerApiService {\n  private baseURL: string = BASE_URL;\n  private headers: HttpHeaders;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUsers(): Observable<any> {\n    return this.http.get(this.baseURL + '/users');\n  }\n\n  loginUser(data): Observable<any> {\n    return this.http.post(this.baseURL + '/login', data);\n  }\n\n  getUser(userId): Observable<any> {\n    return this.http.get(this.baseURL + `/users/${userId}`);\n  }\n\n  registerUser(data): Observable<any> {\n    return this.http.post(this.baseURL + '/register', data);\n  }\n\n  uploadImage(image, data): Observable<any> {\n    const uploadData = new FormData();\n    uploadData.append('image', image);\n    console.log(data.tags);\n    uploadData.append('tags', data.tags);\n    console.log(uploadData.get('tags'));\n    return this.http.post(this.baseURL + '/upload', uploadData);\n  }\n\n  uploadImgFromLink(data): Observable<any> {\n    return this.http.post(this.baseURL + '/upload_from_link', data);\n  }\n\n  addImgToFavorites(imgId): Observable<any> {\n    return this.http.put(this.baseURL + '/toFavs', {imgId});\n  }\n\n  removeImgFromFavorites(imgId): Observable<any> {\n    const httpParams = new HttpParams().set('imgId', imgId);\n    const options = { params: httpParams };\n    return this.http.delete(this.baseURL + '/removeFromFavs', options);\n\n  }\n\n  getFavouriteUserImages(): Observable<any> {\n    return this.http.get(this.baseURL + '/profile/images');\n  }\n\n  getAllImages(tags = ''): Observable<any> {\n    const params = new HttpParams().set('tags', tags);\n    return this.http.get(this.baseURL + '/images', {params});\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {mergeMap} from 'rxjs/operators';\nimport {ServerApiService} from '../../server-api.service';\nimport {HelperService} from '../../helper.service';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n  allImages: object;\n\n  constructor(private service: ServerApiService, private helperService: HelperService) { }\n\n\n  ngOnInit(): void {\n    this.service.getAllImages().subscribe(r => {\n      this.allImages = r;\n    });\n    this.helperService.allImages$.pipe(\n      mergeMap(r => this.service.getAllImages())\n    ).subscribe(res => this.allImages = res);\n\n    // this.helperService.filteredByTagsImages$.pipe(\n    //   mergeMap(r => this.service.getAllImagesByTag(this.tags))\n    // ).subscribe(res => this.allImages = res);\n\n  }\n\n  getImagesByTags(tags: string): void {\n    this.service.getAllImages(tags).subscribe(r => {\n      this.allImages = r;\n    });\n  }\n\n}\n","<div class=\"main-div\">\n\n  <h1>Gif Tumbler</h1>\n  <app-search (tags)=\"getImagesByTags($event)\"></app-search>\n  <app-images-block [allImages]=\"allImages\"></app-images-block>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ServerApiService} from '../../server-api.service';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n  users: any[];\n\n  constructor(private service: ServerApiService) { }\n\n  ngOnInit(): void {\n    this.service.getUsers().subscribe(r => this.users = r);\n\n  }\n\n  getUsers(): void {\n  }\n\n}\n","<p *ngFor=\"let user of users\">\n  {{user.name}}\n</p>\n\n","export const BASE_URL = 'http://localhost:4000';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginFormComponent} from './components/login-form/login-form.component';\nimport {UsersListComponent} from './components/users-list/users-list.component';\nimport {UserPageComponent} from './components/user-page/user-page.component';\nimport {RegisterFormComponent} from './components/register-form/register-form.component';\nimport {MainPageComponent} from './components/main-page/main-page.component';\nimport {ProfileComponent} from './components/profile/profile.component';\nimport {UploadImageComponent} from './components/upload-image/upload-image.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginFormComponent },\n  { path: 'users', component: UsersListComponent },\n  { path: 'users/:id', component: UserPageComponent },\n  { path: 'register', component: RegisterFormComponent },\n  { path: 'profile/:id', component: ProfileComponent},\n  { path: 'upload', component: UploadImageComponent},\n  { path: '', component: MainPageComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}